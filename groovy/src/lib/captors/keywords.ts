export const KeywordPatterns = {
	// groovy keywords
	AS: 'as;fn#NotJNamePart:!',
	DEF: 'def;fn#NotJNamePart:!',
	TRAIT: 'trait;fn#NotJNamePart:!',
	THREADSAFE: '@ThreadSafe;fn#NotJNamePart:!',
	// java keywords
	ABSTRACT: 'abstract;fn#NotJNamePart:!',
	ASSERT: 'assert;fn#NotJNamePart:!',
	AT_INTERFACE: '@interface;fn#NotJNamePart:!',
	BREAK: 'break;fn#NotJNamePart:!',
	CASE: 'case;fn#NotJNamePart:!',
	CATCH: 'catch;fn#NotJNamePart:!',
	CLASS: 'class;fn#NotJNamePart:!',
	CONST: 'const;fn#NotJNamePart:!',
	CONTINUE: 'continue;fn#NotJNamePart:!',
	DEFAULT: 'default;fn#NotJNamePart:!',
	DO: 'do;fn#NotJNamePart:!',
	ELSE: 'else;fn#NotJNamePart:!',
	ENUM: 'enum;fn#NotJNamePart:!',
	EXTENDS: 'extends;fn#NotJNamePart:!',
	FINAL: 'final;fn#NotJNamePart:!',
	FINALLY: 'finally;fn#NotJNamePart:!',
	FOR: 'for;fn#NotJNamePart:!',
	GOTO: 'goto;fn#NotJNamePart:!',
	IF: 'if;fn#NotJNamePart:!',
	IMPLEMENTS: 'implements;fn#NotJNamePart:!',
	IMPORT: 'import;fn#NotJNamePart:!',
	INTERFACE: 'interface;fn#NotJNamePart:!',
	NATIVE: 'native;fn#NotJNamePart:!',
	NEW: 'new;fn#NotJNamePart:!',
	NON_SEALED: 'non-sealed;fn#NotJNamePart:!',
	NULL: 'null;fn#NotJNamePart:!',
	PACKAGE: 'package;fn#NotJNamePart:!',
	PERMITS: 'permits;fn#NotJNamePart:!',
	PRIVATE: 'private;fn#NotJNamePart:!',
	PROTECTED: 'protected;fn#NotJNamePart:!',
	PUBLIC: 'public;fn#NotJNamePart:!',
	RECORD: 'record;fn#NotJNamePart:!',
	RETURN: 'return;fn#NotJNamePart:!',
	SEALED: 'sealed;fn#NotJNamePart:!',
	STATIC: 'static;fn#NotJNamePart:!',
	STRICTFP: 'strictfp;fn#NotJNamePart:!',
	SUPER: 'super;fn#NotJNamePart:!',
	SWITCH: 'switch;fn#NotJNamePart:!',
	SYNCHRONIZED: 'synchronized;fn#NotJNamePart:!',
	THIS: 'this;fn#NotJNamePart:!',
	THROW: 'throw;fn#NotJNamePart:!',
	THROWS: 'throws;fn#NotJNamePart:!',
	TRANSIENT: 'transient;fn#NotJNamePart:!',
	TRY: 'try;fn#NotJNamePart:!',
	VAR: 'var;fn#NotJNamePart:!',
	VOID: 'void;fn#NotJNamePart:!',
	VOLATILE: 'volatile;fn#NotJNamePart:!',
	WHILE: 'while;fn#NotJNamePart:!',
	YIELD: 'yield;fn#NotJNamePart:!'
};

// export const KeywordTokenMatchers = buildTokenMatchers(KeywordPatterns);
